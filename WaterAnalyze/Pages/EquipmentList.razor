@using Data
@inject WaterAnalyzeContext WaterAnalyzeContext
@inject NavigationManager Navigation;
@inject CurrentUser CurrentUser
@inject ISnackbar Snackbar
@page "/equipmentList"


<MudCard Elevation="5" Style="display: flex; width: 90%; border-radius: 15px; margin-left: auto;margin-right: auto; margin-top: 1%; ">
    <MudCard Elevation="0" Style="flex: 30%; border-radius: 10px; padding: 10px">
        <MudImage Elevation="5" Src='/img/paperOne.jpg' Style="width: 600px; height: 580px; object-fit: fill; border-radius: 10px;"></MudImage>
    </MudCard>
    <div Style="flex: 70%;">
        <MudTable Hover="true" Breakpoint="Breakpoint.Sm" FixedHeader="true"
                    Items="@Elements"
                    GroupHeaderStyle="background-color:var(--mud-palette-background-grey)"
                    GroupFooterClass="mb-4"
                    Dense="true"
                  Filter="new Func<Equipment,bool>(FilterFunc1)"
                    @ref="_tableRef">
            <ToolBarContent>
                @* <MudText Typo="Typo.h6">Periodic Elements</MudText> *@
                
                <MudTextField @bind-Value="searchString1" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                <MudSpacer />
                <MudButton Href="/equipmentInfo" Variant="Variant.Filled" Style="margin-left: auto;margin-right: auto;">Добавить оборудование</MudButton>
            </ToolBarContent>
           @* <HeaderContent>
                <MudTh>Фамилия</MudTh>
                <MudTh>Имя</MudTh>
            </HeaderContent>  *@
            <RowTemplate>
                <MudTd>
                    @if (context.DateEnd <= DateTime.Today)
                    {
                        <MudCard Style="background-color: #FF9C9C">
                            <MudCardContent>
                                <MudText>@context.Title </MudText>
                                <MudText Typo="Typo.body2">ГОСТ: @context.DocumentNumber</MudText>
                                <MudText Typo="Typo.body2">Регистрация: @context.DateBegin.Value.ToShortDateString()</MudText>
                                <MudText Typo="Typo.body2">Списание: @context.DateEnd.Value.ToShortDateString()</MudText>
                                <MudText Typo="Typo.body2">Ответственный: @WaterAnalyzeContext.Users.Where(x => x.Id == context.UserId).First().Surname @WaterAnalyzeContext.Users.Where(x => x.Id == context.UserId).First().Name @WaterAnalyzeContext.Users.Where(x => x.Id == context.UserId).First().Patronymic</MudText>
                                @if (CurrentUser.CurrentUserData.RoleId == 1002)
                                {
                                    <MudText @onclick="() => DeletingEquipment(context)" Typo="Typo.body2"><MudButton Variant="Variant.Outlined">Удалить</MudButton></MudText>
                                }
                            </MudCardContent>
                        </MudCard>
                    }
                    else
                    {
                        <MudCard>
                            <MudCardContent>
                                <MudText>@context.Title </MudText>
                                <MudText Typo="Typo.body2">ГОСТ: @context.DocumentNumber</MudText>
                                <MudText Typo="Typo.body2">Регистрация: @context.DateBegin.Value.ToShortDateString()</MudText>
                                <MudText Typo="Typo.body2">Списание: @context.DateEnd.Value.ToShortDateString()</MudText>
                                <MudText Typo="Typo.body2">Ответственный: @WaterAnalyzeContext.Users.Where(x => x.Id == context.UserId).First().Surname @WaterAnalyzeContext.Users.Where(x => x.Id == context.UserId).First().Name @WaterAnalyzeContext.Users.Where(x => x.Id == context.UserId).First().Patronymic</MudText>
                            </MudCardContent>
                        </MudCard>
                    }
                </MudTd>
                @* <MudTd @onclick="() => NavigationToEditingWorker(context.Id.ToString())" DataLabel="Фамилия">@context.Surname</MudTd>
                <MudTd @onclick="() => NavigationToEditingWorker(context.Id.ToString())" DataLabel="Имя">@context.Name</MudTd>
                <MudTd @onclick="() => NavigationToEditingWorker(context.Id.ToString())" DataLabel="Отчество"> @context.Patronymic</MudTd> *@
            </RowTemplate>
        @*     <GroupFooterTemplate>
                <MudTh Class="mud-table-cell-custom-group mud-table-cell-custom-group-footer" colspan="5">Total Mass: @context.Items.Sum((e) => e.Molar)</MudTh>
            </GroupFooterTemplate> *@
        </MudTable>
    </div>



</MudCard>
 
@code {
    private MudTable<Equipment> _tableRef;
    private string searchString1 = "";

    private IEnumerable<Equipment> Elements = new List<Equipment>();

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        Elements = WaterAnalyzeContext.Equipment.Where(x => x.IsDeleted == false).ToList();
    }

    private bool FilterFunc1(Equipment element) => FilterFunc(element, searchString1);

    private bool FilterFunc(Equipment element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        // if (WaterAnalyzeContext.Equipment.Where(x => x.Id == element.Id).First().Surname.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        //     return true;
        // if (WaterAnalyzeContext.Users.Where(x => x.Id == element.Id).First().Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        //     return true;
        // if (WaterAnalyzeContext.Users.Where(x => x.Id == element.Id).First().Patronymic.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        //     return true;
        // if ($"{element.Number} {element.Position} {element.Molar}".Contains(searchString))
        //     return true;
        return false;
    }

    public void DeletingEquipment(Equipment equipment)
    {
        equipment.IsDeleted = true;
        WaterAnalyzeContext.Equipment.Update(equipment);
        WaterAnalyzeContext.SaveChanges();

        Snackbar.Add("Изменения сохранены", Severity.Success);

        Navigation.NavigateTo("/equipmentList");
    }

}

<style>
    body {
    background-color: #fafafa;
    }
</style>