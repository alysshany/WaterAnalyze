@page "/monitoring"
@using Data
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@inject WaterAnalyzeContext WaterAnalyzeContext

<PageTitle>Главная</PageTitle>

<div Style="display: block; width: 30%; margin-left: auto; margin-top: 2%; margin-right: auto; ">
    <MudSpacer />
    <MudSelect ValueChanged="TypeChange" T="string" Label="Отклонения в концентрации" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
        <MudSelectItem T="string" Value="@("Хлорид ионов")" />
        <MudSelectItem T="string" Value="@("Ионов магния")" />
        <MudSelectItem T="string" Value="@("Ионов кальция")" />
        <MudSelectItem T="string" Value="@("Нефтепродуктов")" />
        <MudSelectItem T="string" Value="@("Водородного показателя")" />
    </MudSelect>
</div>
<div Style="display: flex; width: 80%; height: 18%;margin-left: auto; margin-top: 2%; margin-right: auto; ">
    <MudCard Style="flex: 80%;  border-radius: 15px; box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;">
        <div id="map"></div>
    </MudCard>
@*     <div Style="flex: 20%; ">
        <MudSelect T="string" Label="Отклонения" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
            <MudSelectItem T="string" Value="@("Хлор")"  />
            <MudSelectItem T="string" Value="@("Магний")" />
            <MudSelectItem T="string" Value="@("xd")" />
        </MudSelect>
    </div> *@
    
</div>


@code {
    // После того как все элементы DOM веб страницы загружены...

    protected override async System.Threading.Tasks.Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("startmap", null);

            List<Source> sourceList = WaterAnalyzeContext.Sources.ToList();

            foreach (var source in sourceList)
            {
                List<Analyze> analyzeList = WaterAnalyzeContext.Analyzes.Where(x => x.SourceId == source.Id).ToList();

                var hardness = $"";
                var sulfat = $"";
                var chloride = $"";
                var calcium = $"";
                var gidrocarbonat = $"";
                var oil = $"";
                var magnesium = $"";
                var acidityIndex = $"";

                if (analyzeList.Count > 1)
                {
                    analyzeList.Reverse();
                    var lastAnalyze = analyzeList[0];
                    var preLastAnalyze = analyzeList[1];
                    //Жесткость
                    if (lastAnalyze.Hardness > preLastAnalyze.Hardness)
                    {
                        hardness = $"Жесткость: {lastAnalyze.Hardness} ↑";
                    }
                    else if (lastAnalyze.Hardness < preLastAnalyze.Hardness)
                    {
                        hardness = $"Жесткость: {lastAnalyze.Hardness} ↓";
                    }
                    else
                    {
                        hardness = $"Жесткость: {lastAnalyze.Hardness}";
                    }
                    //Сульфаты
                    if (lastAnalyze.Sulfate > preLastAnalyze.Sulfate)
                    {
                        sulfat = $"Сульфаты: {lastAnalyze.Sulfate} ↑";
                    }
                    else if (lastAnalyze.Hardness < preLastAnalyze.Hardness)
                    {
                        sulfat = $"Сульфаты: {lastAnalyze.Sulfate} ↓";
                    }
                    else
                    {
                        sulfat = $"Сульфаты: {lastAnalyze.Sulfate}";
                    }
                    //Хлорид
                    if (lastAnalyze.Сhloride > preLastAnalyze.Сhloride)
                    {
                        chloride = $"Хлориды: {lastAnalyze.Сhloride} ↑";
                    }
                    else if (lastAnalyze.Hardness < preLastAnalyze.Hardness)
                    {
                        chloride = $"Хлориды: {lastAnalyze.Сhloride} ↓";
                    }
                    else
                    {
                        chloride = $"Хлориды: {lastAnalyze.Сhloride}";
                    }
                    //Кальций
                    if (lastAnalyze.Calcium > preLastAnalyze.Calcium)
                    {
                        calcium = $"Кальций: {lastAnalyze.Calcium} ↑";
                    }
                    else if (lastAnalyze.Hardness < preLastAnalyze.Hardness)
                    {
                        calcium = $"Кальций: {lastAnalyze.Calcium} ↓";
                    }
                    else
                    {
                        calcium = $"Кальций: {lastAnalyze.Calcium}";
                    }
                    //Гидрокарбонат
                    if (lastAnalyze.Gidrocorbonat > preLastAnalyze.Gidrocorbonat)
                    {
                        gidrocarbonat = $"Гидрокарбонат: {lastAnalyze.Gidrocorbonat} ↑";
                    }
                    else if (lastAnalyze.Hardness < preLastAnalyze.Hardness)
                    {
                        gidrocarbonat = $"Гидрокарбонат: {lastAnalyze.Gidrocorbonat} ↓";
                    }
                    else
                    {
                        gidrocarbonat = $"Гидрокарбонат: {lastAnalyze.Gidrocorbonat}";
                    }
                    //Нефтепродукты
                    if (lastAnalyze.Gidrocorbonat > preLastAnalyze.Gidrocorbonat)
                    {
                        oil = $"Нетфепродукты: {lastAnalyze.Oil} ↑";
                    }
                    else if (lastAnalyze.Hardness < preLastAnalyze.Hardness)
                    {
                        oil = $"Нетфепродукты: {lastAnalyze.Oil} ↓";
                    }
                    else
                    {
                        oil = $"Нетфепродукты: {lastAnalyze.Oil}";
                    }
                    //Магний
                    if (lastAnalyze.Magnesium > preLastAnalyze.Magnesium)
                    {
                        magnesium = $"Магний: {lastAnalyze.Magnesium} ↑";
                    }
                    else if (lastAnalyze.Hardness < preLastAnalyze.Hardness)
                    {
                        magnesium = $"Магний: {lastAnalyze.Magnesium} ↓";
                    }
                    else
                    {
                        magnesium = $"Магний: {lastAnalyze.Magnesium}";
                    }
                    //PH
                    if (lastAnalyze.AcidityIndex > preLastAnalyze.AcidityIndex)
                    {
                        acidityIndex = $"PH: {lastAnalyze.AcidityIndex} ↑";
                    }
                    else if (lastAnalyze.Hardness < preLastAnalyze.Hardness)
                    {
                        acidityIndex = $"PH: {lastAnalyze.AcidityIndex} ↓";
                    }
                    else
                    {
                        acidityIndex = $"PH: {lastAnalyze.AcidityIndex}";
                    }

                }
                else if (analyzeList.Count == 1)
                {
                    Analyze lastAnalyze = WaterAnalyzeContext.Analyzes.Where(x => x.SourceId == source.Id).First();

                    hardness = $"Жесткость: {lastAnalyze.Hardness}";
                    sulfat = $"Сульфаты: {lastAnalyze.Sulfate}";
                    chloride = $"Хлориды: {lastAnalyze.Сhloride}";
                    calcium = $"Кальций: {lastAnalyze.Calcium}";
                    gidrocarbonat = $"Гидрокарбонат: {lastAnalyze.Gidrocorbonat}";
                    oil = $"Нетфепродукты: {lastAnalyze.Oil}";
                    magnesium = $"Магний: {lastAnalyze.Magnesium}";
                    acidityIndex = $"PH: {lastAnalyze.AcidityIndex}";
                }
                await JSRuntime.InvokeVoidAsync("startAddingObjects", source.CoordinatesX, source.CoordinatesY, source.Title, hardness, sulfat, chloride, calcium, gidrocarbonat, oil, magnesium, acidityIndex);

            }
        }
    }

    public async void TypeChange(string selected)
    {
        await JSRuntime.InvokeVoidAsync("deleteGeo");
        List<Source> sourceList = WaterAnalyzeContext.Sources.ToList();

        switch (selected)
        {
            case "Хлорид ионов":
                foreach (var source in sourceList)
                {
                    var sourceType = WaterAnalyzeContext.SourceTypes.Where(x => x.Id == source.SourceTypeId).First().Title;
                    if (sourceType == "Река" || sourceType == "Ручей")
                    {
                        List<Analyze> analyzeList = WaterAnalyzeContext.Analyzes.Where(x => x.SourceId == source.Id).ToList();
                        analyzeList.Reverse();
                        if (analyzeList.Count != 0)
                        {
                            var lastAnalyze = analyzeList[0];

                            if (lastAnalyze.Сhloride > 300)
                            {
                                await JSRuntime.InvokeVoidAsync("startAddingBaloon", source.CoordinatesX, source.CoordinatesY);
                            }
                        }
                    }
                    else if (sourceType == "Родник" || sourceType == "Колонка" || sourceType == "Колодец" || sourceType == "Арт. Скважина")
                    {
                        List<Analyze> analyzeList = WaterAnalyzeContext.Analyzes.Where(x => x.SourceId == source.Id).ToList();
                        analyzeList.Reverse();
                        if (analyzeList.Count != 0)
                        {
                            var lastAnalyze = analyzeList[0];

                            if (lastAnalyze.Сhloride > 350)
                            {
                                await JSRuntime.InvokeVoidAsync("startAddingBaloon", source.CoordinatesX, source.CoordinatesY);
                            }
                        }
                    }
                }
                break;
            case "Ионов магния":
                foreach (var source in sourceList)
                {
                    var sourceType = WaterAnalyzeContext.SourceTypes.Where(x => x.Id == source.SourceTypeId).First().Title;
                    if (sourceType == "Река" || sourceType == "Ручей")
                    {
                        List<Analyze> analyzeList = WaterAnalyzeContext.Analyzes.Where(x => x.SourceId == source.Id).ToList();
                        analyzeList.Reverse();
                        if (analyzeList.Count != 0)
                        {
                            var lastAnalyze = analyzeList[0];

                            if (lastAnalyze.Magnesium > 40)
                            {
                                await JSRuntime.InvokeVoidAsync("startAddingBaloon", source.CoordinatesX, source.CoordinatesY);
                            }
                        }
                    }
                    else if (sourceType == "Родник" || sourceType == "Колонка" || sourceType == "Колодец" || sourceType == "Арт. Скважина")
                    {
                        List<Analyze> analyzeList = WaterAnalyzeContext.Analyzes.Where(x => x.SourceId == source.Id).ToList();
                        analyzeList.Reverse();
                        if (analyzeList.Count != 0)
                        {
                            var lastAnalyze = analyzeList[0];

                            if (lastAnalyze.Magnesium > 50)
                            {
                                await JSRuntime.InvokeVoidAsync("startAddingBaloon", source.CoordinatesX, source.CoordinatesY);
                            }
                        }
                    }
                }
                break;
            case "Ионов кальция":
                foreach (var source in sourceList)
                {
                    var sourceType = WaterAnalyzeContext.SourceTypes.Where(x => x.Id == source.SourceTypeId).First().Title;
                    if (sourceType == "Река" || sourceType == "Ручей")
                    {
                        List<Analyze> analyzeList = WaterAnalyzeContext.Analyzes.Where(x => x.SourceId == source.Id).ToList();
                        analyzeList.Reverse();
                        if (analyzeList.Count != 0)
                        {
                            var lastAnalyze = analyzeList[0];

                            if (lastAnalyze.Calcium > 180)
                            {
                                await JSRuntime.InvokeVoidAsync("startAddingBaloon", source.CoordinatesX, source.CoordinatesY);
                            }
                        }
                    }
                    else if (sourceType == "Родник" || sourceType == "Колонка" || sourceType == "Колодец" || sourceType == "Арт. Скважина")
                    {
                        // List<Analyze> analyzeList = WaterAnalyzeContext.Analyzes.Where(x => x.SourceId == source.Id).ToList();
                        // analyzeList.Reverse();
                        // var lastAnalyze = analyzeList[0];

                        // if (lastAnalyze.Calcium > 50)
                        // {
                        //     await JSRuntime.InvokeVoidAsync("startAddingBaloon", source.CoordinatesX, source.CoordinatesY);
                        // }
                    }
                }
                break;

            case "Нефтепродуктов":
                foreach (var source in sourceList)
                {
                    var sourceType = WaterAnalyzeContext.SourceTypes.Where(x => x.Id == source.SourceTypeId).First().Title;
                    if (sourceType == "Река" || sourceType == "Ручей")
                    {
                        List<Analyze> analyzeList = WaterAnalyzeContext.Analyzes.Where(x => x.SourceId == source.Id).ToList();
                        analyzeList.Reverse();
                        if (analyzeList.Count != 0)
                        {
                            var lastAnalyze = analyzeList[0];

                            if (lastAnalyze.Oil > 0.05)
                            {
                                await JSRuntime.InvokeVoidAsync("startAddingBaloon", source.CoordinatesX, source.CoordinatesY);
                            }
                        }
                    }
                    else if (sourceType == "Родник" || sourceType == "Колонка" || sourceType == "Колодец" || sourceType == "Арт. Скважина")
                    {
                        List<Analyze> analyzeList = WaterAnalyzeContext.Analyzes.Where(x => x.SourceId == source.Id).ToList();
                        analyzeList.Reverse();
                        if (analyzeList.Count != 0)
                        {
                            var lastAnalyze = analyzeList[0];

                            if (lastAnalyze.Oil > 0.1)
                            {
                                await JSRuntime.InvokeVoidAsync("startAddingBaloon", source.CoordinatesX, source.CoordinatesY);
                            }
                        }
                    }
                }
                break;

            case "Водородного показателя":
                foreach (var source in sourceList)
                {
                    var sourceType = WaterAnalyzeContext.SourceTypes.Where(x => x.Id == source.SourceTypeId).First().Title;
                    if (sourceType == "Река" || sourceType == "Ручей")
                    {
                        List<Analyze> analyzeList = WaterAnalyzeContext.Analyzes.Where(x => x.SourceId == source.Id).ToList();
                        analyzeList.Reverse();
                        if (analyzeList.Count != 0)
                        {
                            var lastAnalyze = analyzeList[0];

                            if (lastAnalyze.AcidityIndex > 9 || lastAnalyze.AcidityIndex < 6)
                            {
                                await JSRuntime.InvokeVoidAsync("startAddingBaloon", source.CoordinatesX, source.CoordinatesY);
                            }
                        }
                    }
                    else if (sourceType == "Родник" || sourceType == "Колонка" || sourceType == "Колодец" || sourceType == "Арт. Скважина")
                    {
                        List<Analyze> analyzeList = WaterAnalyzeContext.Analyzes.Where(x => x.SourceId == source.Id).ToList();
                        analyzeList.Reverse();
                        if (analyzeList.Count != 0)
                        {
                            var lastAnalyze = analyzeList[0];

                            if (lastAnalyze.AcidityIndex > 8.5 || lastAnalyze.AcidityIndex < 6.5)
                            {
                                await JSRuntime.InvokeVoidAsync("startAddingBaloon", source.CoordinatesX, source.CoordinatesY);
                            }
                        }
                    }
                }
                break;

        }
    }

}

<style>
    body {
        background-color: #fafafa;
    }
    #map {
        width: 1300px;
        height: 500px;
        padding: 0;
        display: block;
        margin-left: auto;
        margin-right: auto;
    }
</style>
